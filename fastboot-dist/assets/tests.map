{"version":3,"sources":["criticarq-client/tests/adapters/application.jshint.js","criticarq-client/tests/app.jshint.js","criticarq-client/tests/components/app-nav.jshint.js","criticarq-client/tests/components/article-single.jshint.js","criticarq-client/tests/components/article-tile.jshint.js","criticarq-client/tests/components/category-label.jshint.js","criticarq-client/tests/components/contributor-bio.jshint.js","criticarq-client/tests/components/lazy-image.jshint.js","criticarq-client/tests/components/social-widget.jshint.js","criticarq-client/tests/helpers/contributors-names.jshint.js","criticarq-client/tests/helpers/destroy-app.js","criticarq-client/tests/helpers/destroy-app.jshint.js","criticarq-client/tests/helpers/module-for-acceptance.js","criticarq-client/tests/helpers/module-for-acceptance.jshint.js","criticarq-client/tests/helpers/resolver.js","criticarq-client/tests/helpers/resolver.jshint.js","criticarq-client/tests/helpers/start-app.js","criticarq-client/tests/helpers/start-app.jshint.js","criticarq-client/tests/mixins/reset-scroll-top.jshint.js","criticarq-client/tests/models/article.jshint.js","criticarq-client/tests/models/author.jshint.js","criticarq-client/tests/models/category.jshint.js","criticarq-client/tests/models/contributor.jshint.js","criticarq-client/tests/models/tag.jshint.js","criticarq-client/tests/models/taxonomy.jshint.js","criticarq-client/tests/models/user.jshint.js","criticarq-client/tests/resolver.jshint.js","criticarq-client/tests/router.jshint.js","criticarq-client/tests/routes/application.jshint.js","criticarq-client/tests/routes/articles/category/article.jshint.js","criticarq-client/tests/routes/articles/category/index.jshint.js","criticarq-client/tests/routes/articles/category.jshint.js","criticarq-client/tests/routes/articles/index.jshint.js","criticarq-client/tests/routes/articles.jshint.js","criticarq-client/tests/routes/home.jshint.js","criticarq-client/tests/routes/index.jshint.js","criticarq-client/tests/test-helper.js","criticarq-client/tests/test-helper.jshint.js","criticarq-client/tests/unit/adapters/application-test.js","criticarq-client/tests/unit/adapters/application-test.jshint.js","criticarq-client/tests/unit/models/post-test.js","criticarq-client/tests/unit/models/post-test.jshint.js","criticarq-client/tests/unit/models/user-test.js","criticarq-client/tests/unit/models/user-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('criticarq-client/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/components/app-nav.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/app-nav.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/app-nav.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/components/article-single.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/article-single.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/article-single.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/components/article-tile.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/article-tile.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/article-tile.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/components/category-label.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/category-label.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/category-label.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/components/contributor-bio.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/contributor-bio.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/contributor-bio.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/components/lazy-image.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/lazy-image.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/lazy-image.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/components/social-widget.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/social-widget.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/social-widget.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/helpers/contributors-names.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/contributors-names.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/contributors-names.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('criticarq-client/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'criticarq-client/tests/helpers/start-app', 'criticarq-client/tests/helpers/destroy-app'], function (exports, _qunit, _criticarqClientTestsHelpersStartApp, _criticarqClientTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _criticarqClientTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _criticarqClientTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('criticarq-client/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/helpers/resolver', ['exports', 'criticarq-client/resolver', 'criticarq-client/config/environment'], function (exports, _criticarqClientResolver, _criticarqClientConfigEnvironment) {\n\n  var resolver = _criticarqClientResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _criticarqClientConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _criticarqClientConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('criticarq-client/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/helpers/start-app', ['exports', 'ember', 'criticarq-client/app', 'criticarq-client/config/environment'], function (exports, _ember, _criticarqClientApp, _criticarqClientConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _criticarqClientConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _criticarqClientApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('criticarq-client/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/mixins/reset-scroll-top.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/reset-scroll-top.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/reset-scroll-top.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/models/article.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/article.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/article.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/models/author.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/author.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/author.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/models/category.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/category.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/category.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/models/contributor.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/contributor.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/contributor.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/models/tag.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/tag.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/tag.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/models/taxonomy.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/taxonomy.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/taxonomy.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/models/user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/user.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/routes/articles/category/article.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/articles/category/article.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/articles/category/article.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/routes/articles/category/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/articles/category/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/articles/category/index.js should pass jshint.\\nroutes/articles/category/index.js: line 10, col 9, \\'params\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('criticarq-client/tests/routes/articles/category.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/articles/category.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/articles/category.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/routes/articles/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/articles/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/articles/index.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/routes/articles.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/articles.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/articles.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/routes/home.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/home.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/test-helper', ['exports', 'criticarq-client/tests/helpers/resolver', 'ember-qunit'], function (exports, _criticarqClientTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_criticarqClientTestsHelpersResolver['default']);\n});","define('criticarq-client/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/unit/adapters/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('criticarq-client/tests/unit/adapters/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/adapters/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/unit/models/post-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('post', 'Unit | Model | post', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('criticarq-client/tests/unit/models/post-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/post-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/post-test.js should pass jshint.');\n  });\n});","define('criticarq-client/tests/unit/models/user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('user', 'Unit | Model | user', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('criticarq-client/tests/unit/models/user-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/user-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('criticarq-client/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"tests.js"}